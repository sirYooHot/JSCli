<a href="javascript:;"></a>
<img src=" ">    图片是与基线对齐;

01. IE6不支持png24格式的
	png-8支持透明，不支持渐变的透明;
	htc--->ie专属文件;
	linear-gradient: (默认deg);


02. 弹性盒子
	-webkit-box:   
	01. -webkit-box-pack: 水平对齐;
			start / end / center / justify(两端对齐); 
	02. -webkit-box-align: 垂直对齐;
			start / end / center / justify;
	03. -webkit-box-direction: 是否反转;
			reverse(从右到左排列) / normal(从左到右排列)；
	04. -webkit-box-orient: 修改排列方式;
    		horizontal(水平排列) / vertical(垂直排列)；
	05. -webkit-box-flex: 设置均分剩余宽度的分数：
			1数值;

03. flex: 开启弹性盒子;
	display: flex;
	display: -webkit-flex;为了兼容，需要添加上浏览器前缀；

	01. -webkit-flex-direction: 修改排列方式;
	
	02. webkit-box-direction: 修改排列方式;
			row / row-reverse / column / column-reverse;
			row-reverse: 水平方向从左向右渲染;
				(水平方向：从右往左排列，位置居右；)
	03. -webkit-justify-content: 水平方向对齐;
			flex-start / flex-end / center / space-between / space-around
	04. -webkit-align-items: 垂直方向对齐;
			flex-start / flex-end / center / baseline / strech
			注意：设置了垂直方向对齐；里面的子元素是根据内容来的；
	05. flex: 1;
		01. 存在元素未超平均宽度：均分宽度;
		02. 存在元素超出平均宽度：除开该元素，均分页面剩余宽度;
	
	uc浏览器，QQ内置浏览器，微信等兼容性问题；
	display:  -webkit-box;
	display:  -webkit-flex;
	display:  flex;
	display:  -moz-box;
	
	
	text-align: center/start/end/justify;
	-webkit-box-flex: 1; // 均分剩余宽度；
	-webkit-box-pack: center/start/end;盒子里水平方向
	-webkit-box-align: center/start/end;// 盒子里垂直方向
	-webkit-box-orient: horizontal水平 / vertical垂直;// 设置排列方式；


	弹性盒子: -webkit-box;// 老版本 兼容性由于flex()微信小程序兼容性比较好
		目前没有浏览器支持box-flex；
		Firefox支持替代的-moz-box-flex属性；
		Safari、Ppera、Chrome支持替代的-webkit-；
		box-flex: 属性;  
		display: none / block / inline-block / table-cell / table;
	
	
	
	

04. 2D(平面)transform(过渡<>):
	正负值：
	正值：顺时针；
	负值：逆时针；
	01. rotate()<默认Z轴>: (deg(旋转度数))
			rotateX<X轴:水平向右> / rotateY<Y轴:水平向下> / rotateZ<Z轴:方向朝外>
	02. scale(放大/缩小): (value: x<宽>,y<高>)<一个值为宽高同比例变化> 
			1.5<放大>/1<正常>/0.5<缩小>;
	03. translate(位移)<默认X轴>: (value: px)
			<X:水平向右><Y:水平向下>
			translateX:+正值往右；-负值往左；/ translateY:+正值往下；-负值往上；/ translateZ:+正值往外；-负值往里；
	0.4 skew(斜切)<默认skewX()>：<X:水平向右><Y:水平向下><Z方向朝外>-度数为Y轴与X轴的夹角
			skewX(value: 度数;<元素轴心(Y)的倾斜度>+正值向右；-负值向左；
			skewY(value: 度数<元素轴心(X)的倾斜度>)：+正值向下；-负值向向上；

0.5 transition(动画): 更改的属性，动画的时间，延迟的时间，动画效果的类型；
	width，height，color；all(多个属性动画)；
	类型：
		1>linear(匀速)；
		2>ease(变加速):   
		3>ease-in(加速):
		4>ease-out(减速):
		5>ease-in-out(先加后减):
		6>steps(步数<加减-加减-加减>):
		transform-origin: 甚至元素的中心点位置；

	transform-style: 2D / 3D(动画效果);flat(默认值2D) / preserve-3d(3D);
		perspective(景深): 指的是距离多远看该景象；<推荐设置500px-800px>；
		设置到开启3D的父元素上；
	transform-origin(轴心位置)：
	white-space:

	字体文件: .eot/.ttf/.woff;